package org.dao;

import java.util.Collection;
import java.util.Iterator;

import javax.ejb.EJB;
import javax.ejb.Remote;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.entitees.Categorie;

@Stateless
@Remote(CategorieInterface.class)
public class CategorieImpl implements CategorieInterface {

	@EJB 
	private ProduitImpl produitDao;
	@PersistenceContext(unitName="Persist")
	private EntityManager em;
	Categorie categorie;
	
	public void creerCategorie(String nomCat) {
		ajouterCategorie(nomCat);	
	}
	
	public Categorie ajouterCategorie(String nom) {
		categorie = new Categorie();
		categorie.setNomCategorie(nom);
		em.persist(categorie);
		return categorie;
	}

	public Categorie getCategorieParNom(String nomCat) {
		Query req = em.createQuery("SELECT c FROM Categorie c WHERE c.nomCategorie like :x ");
		req.setParameter("x", "%"+nomCat+"%");
		return (Categorie) req.getResultList();
		//return (Categorie) em.createNamedQuery("Categorie.findByCategoryName").setParameter("categoryName", categoryName).getSingleResult();
	}

	public Collection<Categorie> getListeCategorie() {
        return (Collection<Categorie>) em.createNamedQuery("Categorie.findAll").getResultList();
	}

	public void deleteAll() {
		for (Iterator it = getListeCategorie().iterator();it.hasNext();) {
			Object object = it.next();
			em.remove(object);
		}
		
		for (Iterator it = getListeProduit(); it.hasNext();) {
			Object object = it.next();
			em.remove(object);
		}
	}



}
